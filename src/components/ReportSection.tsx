import { FileText, Download, Calendar } from 'lucide-react';
import type { Report } from '../types';

interface ReportSectionProps {
  reports: Report[];
  isAdmin?: boolean;
}

const ReportSection = ({ reports, isAdmin = false }: ReportSectionProps) => {
  const exportReport = (report: Report) => {
    const reportText = `
RWANDA ENERGY PREDICTOR - HOUSEHOLD REPORT
==========================================

Report ID: ${report.id}
Generated: ${new Date(report.timestamp).toLocaleString()}

HOUSEHOLD INFORMATION
---------------------
Region: ${report.householdData?.region}
Income Level: ${report.householdData?.incomeLevel}
Household Size: ${report.householdData?.householdSize}
Monthly Budget: ${report.householdData?.monthlyBudget} RWF

CONSUMPTION SUMMARY
-------------------
Total Monthly Consumption: ${report.consumption} kWh
Estimated Bill: ${report.bill} RWF
Tariff Bracket: ${report.tariffBracket}

APPLIANCES BREAKDOWN
--------------------
${report.appliances?.map(app => `${app.name}: ${app.consumption} kWh`).join('\n')}

STATUS
------
${parseFloat(String(report.bill)) > parseFloat(String(report.householdData?.monthlyBudget || 0))
  ? `⚠️ OVER BUDGET by ${(parseFloat(String(report.bill)) - parseFloat(String(report.householdData?.monthlyBudget || 0))).toFixed(2)} RWF`
  : `✓ WITHIN BUDGET - Can save ${(parseFloat(String(report.householdData?.monthlyBudget || 0)) - parseFloat(String(report.bill))).toFixed(2)} RWF`
}

==========================================
Generated by Rwanda Energy Predictor System
    `;

    const blob = new Blob([reportText], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `energy-report-${report.id}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-3xl font-bold text-orange-500">Reports</h1>
          <p className="text-black mt-2">Generated prediction reports for analysis</p>
        </div>
  <div className="bg-darkgreen-500 text-black px-4 py-2 rounded-lg font-bold">
          Total: {reports.length} Reports
        </div>
      </div>

      {reports.length === 0 ? (
        <div className="bg-white p-12 rounded-lg border-2 border-darkgreen-500 text-center">
          <FileText size={64} className="mx-auto text-black mb-4" />
          <p className="text-xl text-black">No reports generated yet.</p>
          <p className="text-sm text-black mt-2">Go to Prediction section to generate your first report.</p>
        </div>
      ) : (
        <div className="grid grid-cols-1 gap-6">
          {reports.map((report) => (
            <div
              key={report.id}
              className="bg-white p-6 rounded-lg border-2 border-darkgreen-500 hover:border-orange-500 transition"
            >
              <div className="flex justify-between items-start mb-4">
                <div>
                  <h3 className="text-xl font-bold text-darkgreen-500 flex items-center space-x-2">
                    <FileText size={24} />
                    <span>Report #{report.id}</span>
                  </h3>
                  <p className="text-sm text-black flex items-center space-x-2 mt-2">
                    <Calendar size={16} />
                    <span>{new Date(report.timestamp).toLocaleString()}</span>
                  </p>
                </div>
                <button
                  onClick={() => exportReport(report)}
                  className="bg-orange-500 hover:bg-orange-600 text-white font-bold px-4 py-2 rounded flex items-center space-x-2 transition"
                >
                  <Download size={18} />
                  <span>Export</span>
                </button>
              </div>

              <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4">
                {isAdmin ? (
                  <>
                    <div className="bg-gray-50 p-4 rounded">
                      <p className="text-sm text-black">Region</p>
                      <p className="font-bold text-darkgreen-500">{report.householdData?.region}</p>
                    </div>
                    <div className="bg-gray-50 p-4 rounded">
                      <p className="text-sm text-black">Income Level</p>
                      <p className="font-bold text-darkgreen-500">{report.householdData?.incomeLevel}</p>
                    </div>
                    <div className="bg-gray-50 p-4 rounded">
                      <p className="text-sm text-black">Household Size</p>
                      <p className="font-bold text-darkgreen-500">{report.householdData?.householdSize}</p>
                    </div>
                    <div className="bg-gray-50 p-4 rounded">
                      <p className="text-sm text-black">Budget</p>
                      <p className="font-bold text-darkgreen-500">{report.householdData?.monthlyBudget} RWF</p>
                    </div>
                  </>
                ) : (
                  <>
                    <div className="bg-gray-50 p-4 rounded">
                      <p className="text-sm text-black">Your Total Consumption</p>
                      <p className="font-bold text-darkgreen-500">{report.consumption} kWh</p>
                    </div>
                    <div className="bg-gray-50 p-4 rounded">
                      <p className="text-sm text-black">Your Estimated Bill</p>
                      <p className="font-bold text-orange-400">{report.bill} RWF</p>
                    </div>
                  </>
                )}
              </div>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
                <div className="bg-darkgreen-100 border-2 border-darkgreen-500 p-4 rounded">
                  <p className="text-sm text-black">Consumption</p>
                  <p className="text-2xl font-bold text-darkgreen-600">{report.consumption} kWh</p>
                </div>
                <div className="bg-orange-100 border-2 border-orange-500 p-4 rounded">
                  <p className="text-sm text-black">Estimated Bill</p>
                  <p className="text-2xl font-bold text-orange-600">{report.bill} RWF</p>
                </div>
                <div className="bg-gray-50 border-2 border-darkgreen-500 p-4 rounded">
                  <p className="text-sm text-black">Tariff Bracket</p>
                  <p className="text-2xl font-bold text-black">{report.tariffBracket}</p>
                </div>
              </div>

              {report.appliances && report.appliances.length > 0 && (
                <div className="mb-4">
                  <h4 className="text-sm font-bold text-orange-500 mb-2">Appliances Breakdown:</h4>
                  <div className="bg-gray-50 p-4 rounded">
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-2">
                      {report.appliances.map((app, index) => (
                        <div key={index} className="text-sm">
                          <span className="text-black">{app.name}:</span>{' '}
                          <span className="text-darkgreen-400 font-bold">{app.consumption} kWh</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              )}

              <div className="mt-4">
                {parseFloat(String(report.bill)) > parseFloat(String(report.householdData?.monthlyBudget || 0)) ? (
                  <div className="bg-red-500 text-black p-4 rounded font-bold">
                    ⚠️ OVER BUDGET by{' '}
                    {(parseFloat(String(report.bill)) - parseFloat(String(report.householdData?.monthlyBudget || 0))).toFixed(2)} RWF
                  </div>
                ) : (
                  <div className="bg-darkgreen-500 text-black p-4 rounded font-bold">
                    ✓ WITHIN BUDGET - Can save{' '}
                    {(parseFloat(String(report.householdData?.monthlyBudget || 0)) - parseFloat(String(report.bill))).toFixed(2)} RWF
                  </div>
                )}
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default ReportSection;
